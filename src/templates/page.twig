<!doctype html>

<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>{{title}} · {{project}}</title>
    <link rel="stylesheet" href="{{relativePathToRootDirectory}}/lib/bulma.min.css">
    <link rel="stylesheet" href="{{relativePathToRootDirectory}}/lib/tomorrow-night-bright.min.css">

    <script src="{{relativePathToRootDirectory}}/lib/highlight.min.js"></script>
    <script src="{{relativePathToRootDirectory}}/lib/twig.min.js"></script>
    <style>
        /* For code (tabs), we use a <ul> in .content, which gets assigned a margin-left by bulma.
        Overwrite it or border below tabs will not go to the left edge */
        [data-code] ul {
            margin-left: 0;
        }

        /* Bulma adds padding around <pre>, highlight.js does so around <code> – one is
        not needed */
        .content pre,
        pre {
            padding: 0;
        }

        .paragraph {
            margin: 1em 0;
        }
        .title {
            margin: 1em 0;
        }
        .list li {
            margin: 0.5em 0;
            margin-left: 0.75em;
        }
        /* Use before element to control spacing without additional classes */
        .list li:before {
            content: '–';
            position: relative;
            left: -0.75em;
        }

    </style>
    {# Add documentation styles at the end to overwrite previous styles of base theme #}
    <!-- CSS files linked through styleSources property -->
    {% for source in styleSources %}
        <link rel="stylesheet" href="{{source}}">
    {% endfor %}
</head>

<body>
    <div class="container is-fullhd mx-4">
        <div class="columns">
            <nav class="column is-2 pt-6 mr-5 has-background-white-ter" style="min-height: 100vh">
                <p>Design System</p>
                <h3 class="title is-4 mb-6">{{project}}</h3>
                <!-- Path must be relative to the CWD – fix that -->
                <aside class="menu">
                    {% include "navigation-entry.twig" with {'links': menu} only %}
                </aside>
            </nav>
            <div class="column">
                <div class="my-6">
                    {{html}}
                </div>
            </div>
        </div>
    </div>

    <script>
        /* Use the most primitive JS to keep things simple (no files that need to be copied,
        no polyfills, no compilers) */

        /**
        * Make tabs work
        */
        [...document.querySelectorAll('[data-code]')].forEach((tabContainer) => {
            const tabs = [...tabContainer.querySelectorAll('[data-tab]')];
            const contentContainers = [...tabContainer.querySelectorAll('[data-content]')];
            tabs.forEach((tab) => {
                tab.addEventListener('click', (ev) => {
                    ev.preventDefault();
                    tabs.forEach(tab => tab.classList.remove('is-active'));
                    tab.classList.add('is-active');
                    const tabIndex = tabs.indexOf(ev.currentTarget);
                    contentContainers.forEach((container, index) => {
                        if (index === tabIndex) container.removeAttribute('hidden');
                        else container.setAttribute('hidden', '');
                    });
                });
            })
        });

        /**
        * Add code highlighting
        */
        hljs.highlightAll();

    </script>
    <!-- Scripts injected through scripts property; place them *before* scriptSources as they might
    need to do preparatory work (e.g. define window.Drupal as {}). They can wait for the other
    scripts below by using timeouts, rAF or events -->
    {% for script in scripts %}
        <script>{{script}}</script>
    {% endfor %}
    <!-- Scripts linked through scriptSources property -->
    {% for source in scriptSources %}
        <script src="{{source}}"></script>
    {% endfor %}

</body>
</html>
